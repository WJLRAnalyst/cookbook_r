{
    "collab_server" : "",
    "contents" : "# https://www.fueleconomy.gov/feg/ws/index.shtml#vehicle\n\nlibrary(dplyr)\n# library(plyr)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(plotly) # TO DO - google conflicts with ggplot2\n\nvehicles <- read.csv(\"vehicles.csv\", stringsAsFactors = FALSE)\n\nhead(vehicles)\ntail(vehicles)\n\n# labels <- read.table(\"varnames.txt\",sep=\"-\")\n# labell <- rbind(strsplit(readLines(\"varnames.txt\"),\" - \"))\n\nlabels <- readLines(\"varnames.txt\") %>% \n  strsplit(\" - \") %>% \n  do.call(rbind,.)\n\n\"year\" %in% names(vehicles)\nvehicles$year %>% unique() %>% length() # 31\nmin(vehicles$year)\nmax(vehicles$year)\n\nsummary(vehicles$fuelType)\ntable(vehicles$fuelType1)\ntable(vehicles$fuelType2)\n\nnrow(vehicles) # 34287\n\n#### fuel types ####\nff <- vehicles %>%\n  select(fuelType,fuelType1,fuelType2) %>% \n  # filter(fuelType2 != \"\") %>% \n  unique()\n\n#### transmission ####\ntable(vehicles$trany)\nvehicles$trany[vehicles$trany == \"\"] <- NA \n\n# only care whether auto or manual - helpfully, the first characters of the string in each case are consistent\nvehicles <- vehicles %>% \n  mutate(trany2 = ifelse(substr(trany,1,4)==\"Auto\", \"Auto\", \"Manual\"))\n\nvehicles$trany2 <- as.factor(vehicles$trany2)\n\ntable(vehicles$trany2)\nwith(vehicles,table(trany2,year))\n\n#### charge ####\n# NB - in raw data, unique(vehicles$iCharger) == c(\"\",\"i\"). R coerces \"T\" to TRUE, so sChrger is imported as char and tCharger as bool  \n\ntable(vehicles$sCharger)\ntable(vehicles$tCharger,useNA = \"always\")\nwith(vehicles,table(sCharger,year))\nwith(vehicles,table(tCharger,year,useNA=\"always\"))\n\nvehicles$sCharger <- ifelse(vehicles$sCharger ==\"S\", TRUE,FALSE)\nvehicles$tCharger[vehicles$tCharger == \"\"] <- FALSE\n\n#### MPG ####\n\nMPG_trends <- vehicles %>% \n  group_by(year) %>% \n  summarise(mCity = mean(city08),\n            mHigh = mean(highway08),\n            mComb = mean(comb08))\n\nplot_ly(MPG_trends, x=~year,y=~mCity) \n\nggplot(MPG_trends,aes(year,mComb)) +\n  geom_point() + \n  geom_smooth() +\n  xlab(\"year\") + ylab(\"mean MPG\")\n\n#### does this picture persist when only gasoline powered cars are considered?\ngasCars <- vehicles %>% \n  filter(grepl(\"Gasoline\",as.character(fuelType1),fixed=TRUE),\n         fuelType2 == \"\",\n         atvType != \"Hybrid\")\n\ngasMPG_trends <- gasCars %>% \n  group_by(year) %>% \n  summarise(mCity_gas = mean(city08),\n            mHigh_gas = mean(highway08),\n            mComb_gas = mean(comb08))\n\nggplot(gasMPG_trends,aes(year,mComb_gas)) +\n  geom_point() + \n  geom_smooth() +\n  xlab(\"year\") + ylab(\"mean MPG\")\n\n#### engine size (and relationship to MPG) ####\nvehicles$displ <- as.numeric(vehicles$displ)\ngasCars$displ <- as.numeric(gasCars$displ)\n\nggplot(gasCars,aes(displ,comb08)) +\n  geom_point() + \n  geom_smooth() +\n  xlab(\"Engine size (displacement)\") + ylab(\"MPG\")\n\n\ndisplByYear <- vehicles %>% \n  group_by(year) %>% \n  summarise(mDispl = mean(displ))\n\ngas_displByYear <- gasCars %>% \n  group_by(year) %>% \n  summarise(mDispl = mean(displ))\n\nplot_ly(data = displByYear,x=~year,y=~mDispl)\nplot_ly(data = gas_displByYear,x=~year,y=~mDispl)\n\n#############################3\n\n\n\n\n\ncomb <- gas_displByYear %>% \n  inner_join(gasMPG_trends,by=\"year\") %>% \n  select(year,mDispl,mComb_gas) \n\nplot_ly(data=comb,x=~year,y=~mDispl) %>% \n  add_trace(y=~comb$mComb)\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1578386463780.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2062654461",
    "id" : "6CAFE684",
    "lastKnownWriteTime" : 1578715824,
    "last_content_update" : 1578715824261,
    "path" : "~/Desktop/cookbook_r/001_automobile/main.r",
    "project_path" : "main.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}